# encoding: utf-8

airfare_debits =
  Traveler::BaseDebit.
    where('(name like ?) OR (name like ?)', '%Domestic%', '%Additional Airfare%').
    where.not('name ilike ?', '%Upgrade').pluck(:id)

gbr_debit = Traveler::BaseDebit.find_by(name: 'Great Barrier Reef Escape').id

csv << %w[
  url
  dus_id
  main_dus_ids
  category
  team
  first
  last
  suffix
  gender
  shirt_size
  join_date
  deposit_date
  current_balance
  has_domestic
  departing_date
  returning_date
  departing_from
  returning_to
  address
  street
  street_2
  city
  state
  zip
  overflow
  phone
  email
  parent_1_relationship
  parent_1_name
  parent_1_phone
  parent_1_email
  parent_2_relationship
  parent_2_name
  parent_2_phone
  parent_2_email
  parent_3_relationship
  parent_3_name
  parent_3_phone
  parent_3_email
  competing_teams
  assigned_buses
  arriving_airport
  arriving_from
  arriving_carrier
  arriving_flight
  arriving_at
  arriving_epoch
  departing_airport
  departing_to
  departing_carrier
  departing_flight
  departing_at
  departing_epoch
  sport
]

User.where_exists(:traveler).split_batches_values(preserve_order: true) do |u|
  next unless u.traveler && u.traveler.cancel_date.nil?

  a_sport = u.athlete&.athletes_sports&.find_by(sport_id: u.traveler.team.sport_id)

  arriving_flight, departing_flight = u.traveler.international_flights

  csv << [
    u.url(true),
    u.dus_id,
    u.main_dus_ids.presence&.join(','),
    u.category_title,
    u.team.name,
    u.first,
    u.last,
    u.suffix,
    u.gender,
    u.shirt_size,
    u.traveler.join_date&.to_s,
    u.traveler.deposit_date&.to_s,
    u.balance.to_s(true),
    !!(air = u.traveler.debits.where(base_debit_id: airfare_debits).limit(1).take),
    u.traveler&.departing_date,
    u.traveler&.returning_date,
    air && ((air.base_debit.name =~ /Own Domestic|No Additional Airfare/) ? 'NONE' : (dep_ret = air.name.split(/\s+/).last.split('-')).first),
    air && (dep_ret ? dep_ret.last : 'NONE'),
    (addr = u.main_address.presence)&.inline,
    addr&.street,
    addr&.street_2,
    addr&.city,
    addr&.province_or_state_abbr,
    addr&.zip,
    addr&.country,
    u.ambassador_phone.presence,
    u.all_ambassador_emails,
    *u.guardian_contact_info(3).flatten,
    u.traveler.competing_teams_string,
    u.traveler.buses_string,
    arriving_flight&.arriving_airport_code,
    arriving_flight&.departing_airport_code,
    arriving_flight&.schedule&.operator,
    arriving_flight&.flight_number,
    arriving_flight&.local_arriving_at&.strftime("%F %R"),
    arriving_flight&.arriving_at&.to_i,
    departing_flight&.departing_airport_code,
    departing_flight&.arriving_airport_code,
    departing_flight&.schedule&.operator,
    departing_flight&.flight_number,
    departing_flight&.local_departing_at&.strftime("%F %R"),
    departing_flight&.departing_at&.to_i,
    u.team.sport.abbr_gender,
  ]
end
